networkPolicy:
  enabled: true

global:
  dnsService: "rke2-coredns-rke2-coredns"
  extraVolumes:
    - name: cluster-ca-cert
      secret:
        defaultMode: 420
        secretName: cluster-ca-cert
  extraVolumeMounts:
    - mountPath: /etc/ssl/certs/${ca_hash}.0
      subPath: ${ca_hash}.0
      name: cluster-ca-cert
      readOnly: true

monitoring:
  serviceMonitor:
    enabled: true
  dashboards:
    enabled: true
  rules:
    enabled: true

loki:
  auth_enable: false
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  querier:
    max_concurrent: 4
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h
  commonConfig:
    replication_factor: 1

  storage:
    type: s3
    bucketNames:
      chunks: loki-chunk
      ruler: loki-ruler
    s3:
      region: default
      endpoint: "$${GRAFANA_S3_ENDPOINT}"
      accessKeyId: "$${GRAFANA_LOKI_S3_ACCESKEYID}"
      secretAccessKey: "$${GRAFANA_LOKI_S3_SECRETACCESSKEY}"
      s3ForcePathStyle: true

deploymentMode: Distributed

distributor:
  replicas: 1
  affinity: null

querier:
  affinity: null
  replicas: 1

queryFrontend:
  affinity: null
  replicas: 1

queryScheduler:
  affinity: null
  replicas: 1

indexGateway: &comp_config
  replicas: 1
  extraArgs:
    - "-config.expand-env=true"
  extraEnvFrom:
    - secretRef:
        name: lgtm

compactor:
  affinity: null
  <<: *comp_config

ingester:
  affinity: null
  zoneAwareReplication:
    enabled: false
  <<: *comp_config

ruler:
  affinity: null
  <<: *comp_config

minio:
  enabled: false

backend:
  replicas: 0

read:
  replicas: 0

write:
  replicas: 0
