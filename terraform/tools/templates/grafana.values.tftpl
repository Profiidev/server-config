persistence:
  enabled: true
  storageClassName: ${storage_class}
grafana.ini:
  server:
    root_url: https://grafana.profidev.io
sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    labelValue: "1"
    searchNamespace: ALL
ingress:
  enabled: true
  ingressClassname: ${ingress_class}
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ${namespace}/${cloudflare_ca_cert_var}
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
  hosts:
    - grafana.profidev.io
  tls:
    - secretName: ${cloudflare_cert_var}
      hosts:
        - "*.profidev.io"
        - "profidev.io"
serviceMonitor:
  enabled: true
  interval: 60s

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      # https://grafana.com/docs/grafana/latest/datasources/loki/#provision-the-loki-data-source
      - name: Loki
        uid: loki
        type: loki
        url: http://loki-gateway
        jsonData:
          httpHeaderName1: X-Scope-OrgID
        secureJsonData:
          httpHeaderValue1: "1"
        isDefault: false
      # https://grafana.com/docs/grafana/latest/datasources/prometheus/#provision-the-data-source
      - name: Mimir
        uid: prom
        type: prometheus
        url: http://mimir-nginx/prometheus
        isDefault: true
        jsonData:
          timeInterval: 60s
      # https://grafana.com/docs/grafana/latest/datasources/tempo/configure-tempo-data-source/#provision-the-data-source
      - name: Tempo
        uid: tempo
        type: tempo
        url: http://tempo-query-frontend:3100
        isDefault: false
        jsonData:
          tracesToLogsV2:
            datasourceUid: loki
          lokiSearch:
            datasourceUid: loki
          tracesToMetrics:
            datasourceUid: prom
          serviceMap:
            datasourceUid: prom
